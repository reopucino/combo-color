local col = require("collider")
local drawdebug = require("debug-draw.debug-draw")


--properti
go.property("rect_width", 40)
go.property("rect_height", 40)
go.property("start_animate", true)

local overlap = { x = 20, y=20}

local function move_to_target(self, time_move)
	local target = go.get_position("player")
	go.animate(".", "position", go.PLAYBACK_ONCE_FORWARD, target, go.EASING_LINEAR, time_move)
	self.reduce_timer = true
end

local function stop_animate(self)
	go.cancel_animations(".")
	self.reduce_timer = false
	timer.delay(0.5, false, function()
		move_to_target(self, self.time_move)
	end)
	
end

function init(self)
	-- add props
	self.time_move = 5
	self.reduce_timer = false

	if(self.start_animate) then
		move_to_target(self, self.time_move)
	end
	
	
	msg.post(".", "acquire_input_focus")
end

function on_message(self, message_id, message, sender)
	-- Learn more: https://defold.com/manuals/message-passing/
end

function update(self, dt)
	local pos = go.get_position(".")
	local afteroverlap = {x = pos.x - overlap.x, y = pos.y-overlap.y}
	drawdebug.rect(afteroverlap.x, afteroverlap.x+self.rect_width, afteroverlap.y,afteroverlap.y+self.rect_height, "red")

	if self.reduce_timer then
		self.time_move = self.time_move - dt
	end
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
	if action_id == hash("touch") and action.pressed then
		local pos = go.get_position(".", "position")
		if col.collide_rect(action.x, action.y, pos.x - overlap.x, pos.y-overlap.y, self.rect_width, self.rect_height) then
			stop_animate(self)
		end
	end
end

function on_reload(self)
	-- Learn more: https://defold.com/manuals/hot-reload/
end
